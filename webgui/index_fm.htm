<!DOCTYPE html>
<html lang="en">
<head>
    <title>FLipMouse Configuration</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link rel="shortcut icon" href="favicon_fm.ico" type="image/x-icon">
    <link rel="icon" href="favicon_fm.ico" type="image/x-icon">

    <link rel="stylesheet" href="css/normal.css">
    <link rel="stylesheet" href="css/skeleton.css">
    <link rel="stylesheet" href="css/custom.css">
    <link rel="stylesheet" href="css/slider.css">
    <link rel="stylesheet" href="css/bootstrap-custom.css">
    <link rel="stylesheet" href="css/bootstrap-grid.css">
    <script src="lib/domi18n.js"></script>
    <script src="lib/loglevel.min.js"></script>

    <script src="js_fm/const.js"></script>
    <script src="js/lquery.js"></script>
    <script src="js/wsutil.js"></script>
    <script src="js/arecomm.js"></script>
    <script src="js_fm/sercomm.js"></script>
    <script src="js/wscomm.js"></script>
    <script src="js_fm/flipcomm.js"></script>
    <script src="js_fm/mockcomm.js"></script>
    <script src="js_fm/tabact.js"></script>
    <script src="js_fm/tabglob.js"></script>
    <script src="js_fm/elecutils.js"></script>
    <script src="js_fm/shortcut.js"></script>
    <script src="js_fm/router.js"></script>
    <script type="module" src="js_fm/preactUtil.js"></script>
    <script type="module" src="js_fm/comp/PositionVisualization.js"></script>
    <script type="module" src="js_fm/comp/BtnSipPuffVisualization.js"></script>
    <script type="module" src="js_fm/views/TabVisualization.js"></script>
    <script type="module" src="js_fm/views/TabSlots.js"></script>
    <script type="module" src="js_fm/stylutil.js"></script>
</head>
<body>
<div id="connectDiv">
    <div id="connectContent" style="display: none">
        <h1>FLipMouse Configuration</h1>
        <div class="row">
            <button class="twelve columns" data-i18n="" onclick="initFlip()">Connect to FLipMouse connected via USB // Verbinden zu FLipMouse (über USB angeschlossen)</button>
            <button class="twelve columns" data-i18n="" onclick="testMode()">Use Test mode without real FLipMouse // Test-Modus ohne echte FLipMouse verwenden</button>
        </div>
    </div>
</div>
<div id="content">
    <header class="container-fluid" role="banner">
        <div class="row">
            <div>
                <h1 id="mainHeading" tabindex="-1" class="nine columns" data-i18n>FLipMouse Configuration // FLipMouse Konfiguration</h1>
                <span aria-hidden="true" class="show-mobile headerConnectIndicator green connectedIndicator" style="display: none" title="connected">&#x2713;</span>
                <span aria-hidden="true" class="show-mobile headerConnectIndicator red disconnectedIndicator" title="not connected">&#x2717;</span>
            </div>
            <div class="three columns hide-mobile showscreenreader">
                <div class="row">
                    <label class="seven columns" for="selectSlots" data-i18n>Select Slot // Slot auswählen</label>
                    <div class="four columns text-right">
                        <span aria-hidden="true" style="display: none" class="connectedIndicator" title="connected">&#x2713;</span>
                        <span aria-hidden="true" class="disconnectedIndicator" title="not connected">&#x2717;</span>
                        <span id="connStateLabel" aria-hidden="false" class="hidden" data-i18n>connection status // Verbindungsstatus</span>
                        <span id="connStateText" aria-hidden="false" aria-describedby="connStateLabel" aria-live="assertive" role="status" class="show-desktop" accesskey="p" data-i18n>not connected // nicht verbunden</span>
                    </div>
                </div>
                <select aria-hidden="true" id="selectSlots" class="slot-select row u-full-width" onchange="flip.setSlot(this.value)">
                </select>
            </div>
        </div>
        <div class="row mb-5" id="tabMenu" role="menubar" tabindex="-1" accesskey="0">
            <button id="toNavLink" onclick="L.toggleClass('.menubutton', 'd-none')" class="col d-md-none button button-primary" data-tab data-i18n>&#x2630; Menu // &#x2630; Menü</button>
            <button role="menuitem" onclick="router.toView('#tabBasic')" class="col-md m-1 d-none d-md-block menubutton button-primary" accesskey="1" data-tab id="tabBasicBtn" data-i18n>Basic Setup // Basis-Config</button>
            <button role="menuitem" onclick="router.toView('#tabPuff')" class="col-md m-1 d-none d-md-block menubutton button-primary" accesskey="2" data-tab id="tabPuffBtn" data-i18n>Sip and Puff // Saug-Puste-Steuerung</button>
            <button role="menuitem" onclick="router.toView('#tabSlots')" class="col-md m-1 d-none d-md-block menubutton button-primary" accesskey="3" data-tab id="tabSlotsBtn" data-i18n>Slots // Slots</button>
            <button role="menuitem" onclick="router.toView('#tabActions')" class="col-md m-1 d-none d-md-block menubutton button-primary" accesskey="4" data-tab id="tabActionsBtn" data-i18n>Actions // Aktionen</button>
            <button role="menuitem" onclick="router.toView('#tabGlobal')" class="col-md m-1 d-none d-md-block menubutton button-primary" accesskey="5" data-tab id="tabGlobalBtn" data-i18n>Global // Global</button>
            <button role="menuitem" onclick="router.toView('#tabVis')" class="col-md m-1 d-none d-md-block menubutton button-primary" accesskey="6" data-tab id="tabVisBtn" data-i18n>Visualization // Visualisierung</button>
        </div>
    </header>
    <main role="main">
        <div id="viewContainer">

        </div>
        <section aria-labelledby="tabActionsHeader" class="tabs-pane d-none" id="tabActions">
            <div tabindex="-1">
                <h2 id="tabActionsHeader" style="display: none" aria-hidden="false" data-i18n>Tab 4 - FLipMouse Action configuration // Tab 4 - FLipMouse Konfiguration Aktionen</h2>
            </div>
            <div class="row">
                <h3 id="fieldsetModeLabel" style="display: inline-block;" data-i18n>FLipMouse mode // FLipMouse Modus</h3>
                <a aria-hidden="true" id="hideModeHelpTextA" data-i18n style="display: none" href="javascript:L.toggleInline('#showModeHelpTextA', '#hideModeHelpTextA');L.toggle('#modeHelpText');">hide info // verstecke Info</a>
                <a aria-hidden="true" id="showModeHelpTextA" data-i18n href="javascript:L.toggleInline('#showModeHelpTextA', '#hideModeHelpTextA');L.toggle('#modeHelpText');">show info // zeige Info</a>
            </div>
            <div data-i18n id="modeHelpText" style="display: none" aria-hidden="false">
                <p>Select the mode of the FLipMouse. In "Mouse" Mode the stick is used to move the mouse, in "Alternative" mode the stick can be used to trigger custom actions.</p>
                <p>Wähle den FLipMouse Modus. Im "Maus" Modus bewegt der Stick die Maus, im "Alternative" Modus kann der Stick verwendet werden um benutzerdefinierte Aktionen auszulösen.</p>
            </div>
            <div class="row space-bottom">
                <fieldset role="radiogroup" aria-labelledby="fieldsetModeLabel">
                    <div class="six columns">
                        <input aria-hidden="false" type="radio" name="modeRadio" role="radio" id="MODE_MOUSE" class="custom-radio" onchange="tabAction.selectMode(this)"/>
                        <label for="MODE_MOUSE" class="button btnTransparent" data-i18n>Mouse // Maus</label>
                    </div>
                    <div class="six columns">
                        <input aria-hidden="false" type="radio" name="modeRadio" role="radio" id="MODE_ALTERNATIVE" class="custom-radio" onchange="tabAction.selectMode(this)"/>
                        <label for="MODE_ALTERNATIVE" class="button btnTransparent" data-i18n>Alternative // Alternativ</label>
                    </div>
                </fieldset>
            </div>
            <h3 data-i18n>Change actions // Aktionen ändern</h3>
            <div class="row">
                <label class="three columns text-right text-normal" for="selectActionButton" data-i18n>Action to define // Zu belegende Funktion</label>
                <select id="selectActionButton" class="five columns" onchange="tabAction.selectActionButton(this.value)">
                </select>
                <div class="four columns">
                    <span id="currentActionLabel" class="hide-tablet-inline" data-i18n>Current action: // Aktuelle Aktion:</span>
                    <span id="currentAction" class="hide-mobile-inline"></span>
                </div>
            </div>
            <div class="row" style="margin: 0.5em 0 0.5em 0">
                <fieldset role="radiogroup" aria-labelledby="fieldsetActionCategoryLabel">
                    <legend id="fieldsetActionCategoryLabel" class="three columns text-right text-normal" data-i18n>Action category // Aktions-Kategorie</legend>
                    <div class="eight columns">
                        <div class="act-category-btn">
                            <input checked aria-hidden="false" type="radio" name="actCatRadio" role="radio" id="LEARN_CAT_KEYBOARD" class="custom-radio" onchange="tabAction.selectActionCategory(this)"/>
                            <label for="LEARN_CAT_KEYBOARD" class="button btnTransparent" data-i18n>Keyboard // Tastatur</label>
                        </div>
                        <div class="act-category-btn">
                            <input aria-hidden="false" type="radio" name="actCatRadio" role="radio" id="LEARN_CAT_MOUSE" class="custom-radio" onchange="tabAction.selectActionCategory(this)"/>
                            <label for="LEARN_CAT_MOUSE" class="button btnTransparent" data-i18n>Mouse // Maus</label>
                        </div>
                        <div class="act-category-btn">
                            <input aria-hidden="false" type="radio" name="actCatRadio" role="radio" id="LEARN_CAT_IR" class="custom-radio" onchange="tabAction.selectActionCategory(this)"/>
                            <label for="LEARN_CAT_IR" class="button btnTransparent" data-i18n>Infrared // Infrarot</label>
                        </div>
                        <div class="act-category-btn">
                            <input aria-hidden="false" type="radio" name="actCatRadio" role="radio" id="LEARN_CAT_FLIPACTIONS" class="custom-radio" onchange="tabAction.selectActionCategory(this)"/>
                            <label for="LEARN_CAT_FLIPACTIONS" class="button btnTransparent" data-i18n>other // andere</label>
                        </div>
                        <div class="act-category-btn">
                            <input aria-hidden="false" type="radio" name="actCatRadio" role="radio" id="LEARN_CAT_CUSTOM" class="custom-radio" onchange="tabAction.selectActionCategory(this)"/>
                            <label for="LEARN_CAT_CUSTOM" class="button btnTransparent">Custom</label>
                        </div>
                    </div>
                </fieldset>
            </div>
            <div id="WRAPPER_LEARN_CAT_KEYBOARD">
                <div class="row">
                    <label class="three columns text-right text-normal" for="INPUT_LEARN_CAT_KEYBOARD" data-i18n>Action Input // Eingabe Aktion</label>
                    <input type="text" id="INPUT_LEARN_CAT_KEYBOARD" class="six columns" onkeydown="tabAction.handleKeyBoardEvent(event)" oninput="tabAction.handleOnKeyboardInput(event)" autocomplete="off"/>
                    <button onclick="tabAction.resetRec()" class="two columns" data-i18n>Reset // Löschen</button>
                </div>
                <div class="row">
                    <label id="labelSpecialKeys" class="three columns text-right text-normal" data-i18n>Special Keys // Spezialtasten</label>
                    <div class="eight columns">
                        <fieldset role="group" aria-labelledby="labelSpecialKeys">
                            <button class="special-key btnTransparent" data-i18n onclick="tabAction.addSpecialKey(C.JS_KEYCODE_CTRL)">Ctrl // Strg</button>
                            <button class="special-key btnTransparent" onclick="tabAction.addSpecialKey(C.JS_KEYCODE_ALT)">Alt</button>
                            <button class="special-key btnTransparent" onclick="tabAction.addSpecialKey(C.JS_KEYCODE_SHIFT)">Shift</button>
                            <button class="special-key btnTransparent" onclick="tabAction.addSpecialKey(C.JS_KEYCODE_GUI)">Win</button>
                            <button class="special-key btnTransparent" onclick="tabAction.addSpecialKey(C.JS_KEYCODE_TAB)">Tab</button>
                            <select aria-hidden="true" id="SELECT_LEARN_CAT_KEYBOARD_SPECIAL" onchange="tabAction.addSpecialKey(this.value)">
                            </select>
                        </fieldset>
                    </div>
                </div>
                <div class="row">
                    <label class="three columns text-right text-normal" data-i18n>Recorded AT Command // Aufgenommenes AT Kommando</label>
                    <div id="recordedAtCmd" class="six columns space-bottom" data-i18n>(none) // (leer)</div>
                    <div id="recordedActionA11y" aria-live="assertive" role="alert" aria-hidden="false" class="hidden"></div>
                    <button id="buttonRecOK" onclick="tabAction.saveRec()" disabled class="two columns" data-i18n="">Test // Testen</button>
                </div>
            </div>
            <div id="WRAPPER_LEARN_CAT_MOUSE" class="row" style="display: none">
                <label class="three columns text-right text-normal" for="SELECT_LEARN_CAT_MOUSE" data-i18n>Action // Aktion</label>
                <select id="SELECT_LEARN_CAT_MOUSE" class="eight columns" onchange="tabAction.selectAtCmd(this.value)">
                </select>
            </div>
            <div id="WRAPPER_LEARN_CAT_IR" class="row" style="display: none">
                <div class="row">
                    <label class="three columns text-right text-normal" for="SELECT_LEARN_CAT_IR" data-i18n>IR command // IR Kommando</label>
                    <select id="SELECT_LEARN_CAT_IR" class="three columns">
                    </select>
                    <div style="display: flex" class="five columns">
                        <button class="column" onclick="tabAction.deleteIRCommand(L('#SELECT_LEARN_CAT_IR').value)" data-i18n>Delete // Löschen</button>
                        <button class="column" onclick="flip.sendATCmd(C.AT_CMD_IR_PLAY, L('#SELECT_LEARN_CAT_IR').value)" data-i18n>Play // Abspielen</button>
                        <button class="column" onclick="tabAction.selectAtCmd(C.AT_CMD_IR_PLAY + ' ' + L('#SELECT_LEARN_CAT_IR').value)" data-i18n>set action // Aktion setzen</button>
                    </div>
                </div>
                <div class="row">
                    <label class="three columns text-right text-normal" for="INPUT_LEARN_CAT_IR" data-i18n>new command // neues Kommando</label>
                    <input type="text" id="INPUT_LEARN_CAT_IR" class="three columns" placeholder="command name" oninput="L('#record-action').disabled = !this.value">
                    <button id="record-action" disabled onclick="tabAction.recordIRCommand()" class="three columns" style="position: relative;">
                        <span id="record-action-button-normal" style="position: relative" data-i18n>Record // Aufnahme</span>
                        <span id="record-action-button-saving" style="display: none" data-i18n>recording... // wird  aufgenommen...</span>
                    </button>
                </div>
            </div>
            <div id="WRAPPER_LEARN_CAT_FLIPACTIONS" class="row" style="display: none">
                <label class="three columns text-right text-normal" for="SELECT_LEARN_CAT_FLIPACTIONS" data-i18n>Action // Aktion</label>
                <select id="SELECT_LEARN_CAT_FLIPACTIONS" class="eight columns" onchange="tabAction.selectAtCmd(this.value)">
                </select>
            </div>
            <div id="WRAPPER_LEARN_CAT_CUSTOM" class="row" style="display: none">
                <label class="three columns text-right text-normal" for="INPUT_LEARN_CAT_CUSTOM" data-i18n>AT command // AT Kommando</label>
                <input type="text" id="INPUT_LEARN_CAT_CUSTOM" class="six columns">
                <button class="two columns" onclick="tabAction.selectAtCmd(L('#INPUT_LEARN_CAT_CUSTOM').value)" data-i18n>Test // Testen</button>
            </div>
            <div id="WRAPPER_ADDITIONAL_FIELD_TEXT" class="row" style="display: none">
                <label class="three columns text-right text-normal" for="ADDITIONAL_FIELD_TEXT" data-i18n>AT command // AT Kommando</label>
                <input type="text" id="ADDITIONAL_FIELD_TEXT" class="six columns">
                <button class="two columns" onclick="tabAction.setAtCmdWithAdditionalData(L('#ADDITIONAL_FIELD_TEXT').value)" data-i18n>Test // Testen</button>
            </div>
            <div id="WRAPPER_ADDITIONAL_FIELD_SELECT" class="row" style="display: none">
                <label class="three columns text-right text-normal" for="ADDITIONAL_FIELD_SELECT" data-i18n></label>
                <select id="ADDITIONAL_FIELD_SELECT" class="six columns">
                </select>
                <button class="two columns" onclick="tabAction.setAtCmdWithAdditionalData(L('#ADDITIONAL_FIELD_SELECT').value)" data-i18n>Test // Testen</button>
            </div>

            <br/>
            <h3 data-i18n>Current saved mapping // Aktuelle gespeicherte Konfiguration</h3>
            <div id="currentConfigTh" class="hide-mobile row thead" aria-hidden="true">
                <div class="two columns" data-i18n>Description // Bezeichnung</div>
                <div class="four columns" data-i18n>Current action // aktuelle Aktion</div>
                <div class="four columns" data-i18n>Current AT command // aktuelles AT Kommando</div>
            </div>
            <ol id="currentConfigTb" class="tbody"></ol>

            <br id="tabActSaveBtnSpacer"/>
            <button id="save-action" onclick="actionAndToggle(flip.save, [], ['#save-action-button-normal', '#save-action-button-saving'], '#save-action-value-bar').then(function() {tabAction.init()})" class="u-full-width" style="position: relative;">
                <i id="save-action-value-bar" class="value-bar color-lightercyan" style="width: 0%;"></i>
                <span id="save-action-button-normal" style="position: relative" data-i18n>Save // Speichern</span>
                <span id="save-action-button-saving" style="display: none" data-i18n>Saving... // Wird
                    gespeichert...
                </span>
            </button>
        </section>
        <section aria-labelledby="tabGlobalHeader" class="tabs-pane d-none" id="tabGlobal">
            <div tabindex="-1">
                <h2 id="tabGlobalHeader" style="display: none" aria-hidden="false" data-i18n>Tab 5 - FLipMouse global properties // Tab 5 - FLipMouse globale Parameter</h2>
            </div>
            <div class="row">
                <h3 data-i18n>Gobal properties // Globale Parameter</h3>
            </div>
            <div class="row">
                <label class="three columns text-right text-normal" for="PARAM_MQTT_BROKER" data-i18n>MQTT broker</label>
                <input type="text" id="PARAM_MQTT_BROKER" class="five columns" placeholder="new MQTT broker"/>
                <div class="three columns">
                    <button onclick="flip.sendATCmd(C.AT_CMD_MQTT_BROKER, L('#PARAM_MQTT_BROKER').value); tabGlobal.showCheckmark(this)">
                        <span data-i18n>Set // Setzen</span>
                        <span style="display: none">&#x2714;</span>
                    </button>
                </div>
                <div class="one column show-mobile space-bottom-2x"></div>
            </div>
            <div class="row">
                <label class="three columns text-right text-normal" for="PARAM_MQTT_DELIM" data-i18n>MQTT delimiter // MQTT Trennzeichen</label>
                <input type="text" id="PARAM_MQTT_DELIM" class="five columns" placeholder="new MQTT delimiter"/>
                <div class="three columns">
                    <button onclick="flip.sendATCmd(C.AT_CMD_MQTT_DELIMITER, L('#PARAM_MQTT_DELIM').value); tabGlobal.showCheckmark(this)">
                        <span data-i18n>Set // Setzen</span>
                        <span style="display: none">&#x2714;</span>
                    </button>
                </div>
                <div class="one column show-mobile space-bottom-2x"></div>
            </div>
            <div class="row">
                <label class="three columns text-right text-normal" for="PARAM_WIFI_NAME" data-i18n>WiFi name // WiFi Name</label>
                <input type="text" id="PARAM_WIFI_NAME" class="five columns" placeholder="new WiFi name"/>
                <div class="three columns">
                    <button onclick="flip.sendATCmd(C.AT_CMD_WIFI_NAME, L('#PARAM_WIFI_NAME').value); tabGlobal.showCheckmark(this)">
                        <span data-i18n>Set // Setzen</span>
                        <span style="display: none">&#x2714;</span>
                    </button>
                </div>
                <div class="one column show-mobile space-bottom-2x"></div>
            </div>
            <div class="row">
                <label class="three columns text-right text-normal" for="PARAM_WIFI_PASSWORD" data-i18n>WiFi password // WiFi Passwort</label>
                <input type="password" id="PARAM_WIFI_PASSWORD" class="five columns" placeholder="new WiFi password"/>
                <div class="three columns">
                    <button onclick="flip.sendATCmd(C.AT_CMD_WIFI_PASSWORD, L('#PARAM_WIFI_PASSWORD').value); tabGlobal.showCheckmark(this)">
                        <span data-i18n>Set // Setzen</span>
                        <span style="display: none">&#x2714;</span>
                    </button>
                </div>
                <div class="one column show-mobile space-bottom-2x"></div>
            </div>
            
            <div class="row">
                <h3 data-i18n>Updates // Updates</h3>
            </div>
            <div id="updatesTh" class="hide-mobile row thead" aria-hidden="true">
                <div class="two columns" data-i18n>Module // Modul</div>
                <div class="four columns" data-i18n>Installed version // installierte Version</div>
                <div class="four columns" data-i18n>Available version // verfügbare Version</div>
            </div>
            <ol id="updatesTb" class="tbody"></ol>
            <div class="row space-bottom">
                <fieldset role="radiogroup" aria-labelledby="fieldsetUpdateLabel">
                    <div class="six columns">
                        <input aria-hidden="false" type="radio" name="moduleRadio" role="radio" id="UPDATE_WWW" class="custom-radio"/>
                        <label for="UPDATE_WWW" class="button btnTransparent" data-i18n>Load update from Internet // Update aus dem Internet laden</label>
                    </div>
                    <div class="six columns">
                        <input aria-hidden="false" type="radio" name="moduleRadio" role="radio" id="UPDATE_LOCAL" class="custom-radio"/>
                        <label for="UPDATE_LOCAL" class="button btnTransparent" data-i18n>Use local update file // Lokale Update Datei auswählen</label>
                    </div>
                </fieldset>
            </div>
            <div class="row space-bottom">
                <label class="three columns text-right text-normal" for="START_UPDATE" data-i18n>Start Update // Update beginnen</label>
                <div class="three columns" id="START_UPDATE">
                    <button onclick="tabGlobal.UpdateTeensy(this)">
                        <span data-i18n>Update Mainboard // Update Mainboard</span>
                        <span style="display: none">&#x2714;</span>
                    </button>
                    <button onclick="tabGlobal.UpdateBluetooth(this)">
                        <span data-i18n>Update Bluetooth // Update Bluetooth</span>
                        <span style="display: none">&#x2714;</span>
                    </button>
                </div>
                <!-- <div class="one column show-mobile space-bottom-2x"></div> -->
            </div>
        </section>
        <section class="tabs-pane d-none" id="tabVis">

        </section>
    </main>
</div>

<script type="module">
    import {TabVisualization} from "./js_fm/views/TabVisualization.js";
    import {TabBasic} from "./js_fm/views/TabBasic.js";
    import {TabSipPuff} from "./js_fm/views/TabSipPuff.js";
    import {TabSlots} from "./js_fm/views/TabSlots.js";

    router.addView('#tabBasic', TabBasic);
    router.addView('#tabPuff', TabSipPuff);
    router.addView('#tabSlots', TabSlots);
    router.addView('#tabActions', tabAction);
    router.addView('#tabGlobal', tabGlobal);
    router.addView('#tabVis', TabVisualization);
</script>

<script>
    window.onload = function () {
        window.domI18nInstance = domI18n({
            selector: '[data-i18n]',
            separator: ' // ',
            languages: ['en', 'de'],
            enableLog: false
        });
        L.loadScript('js_fm/i18n/i18n_' + L.getLang() + '.js', 'js_fm/i18n/i18n_en.js').then(function () {
            L('html')[0].lang = window.lang;
            if (C.GUI_IS_MOCKED_VERSION || C.GUI_IS_ON_DEVICE) {
                initFlip();
            } else {
                L.setVisible('#connectContent');
            }
        });
    };

    function testMode() {
        C.GUI_IS_MOCKED_VERSION = true;
        initFlip();
    }

    function initFlip() {
        window.flip = new FlipMouse();
        flip.init().then(function (config) {
            L.setVisible('#connectDiv', false);
            flip.setSlotChangeHandler((slot, newconfig) => {
                L('#selectSlots').value = slot;
                //TODO
            });
            router.toView();
            flip.addConnectionTestCallback((isConnected) => {
                L.setVisible('.connectedIndicator', isConnected, 'inline');
                L.setVisible('.disconnectedIndicator', !isConnected, 'inline');
                L('#connStateText').innerHTML = isConnected ? L.translate('CONNECTED') : L.translate('NOT_CONNECTED');
            });
        });
    }

    function actionAndToggle(actionFunction, argList, toggleElementList, progressBarId) {
        return new Promise(function (resolve) {
            var maxProgress = 0;
            var stopProgressBar = false;
            argList = argList || [];
            L.toggle.apply(null, toggleElementList);
            var promise = actionFunction.apply(null, argList.concat(progressHandler));
            if (promise && promise.then) {
                promise.then(function () {
                    if (progressBarId) {
                        progressHandler(100, 100);
                        setTimeout(function () {
                            stopProgressBar = true;
                            L(progressBarId).style = 'width: 0%;';
                        }, 500);
                    }
                    L.toggle.apply(null, toggleElementList);
                    resolve();
                }, function () {
                    stopProgressBar = true;
                });
            }

            function progressHandler(progress, timeConstant) {
                var startTime = L.getMs();
                timeConstant = timeConstant || 1000;
                if (progressBarId) {
                    updateProgressBar(maxProgress);
                }

                function updateProgressBar(oldPrg) {
                    setTimeout(function () {
                        var t = L.getMs() - startTime;
                        var p = (progress - oldPrg) * (1 - Math.exp(-t / timeConstant)) + oldPrg;
                        if (p > maxProgress && !stopProgressBar) {
                            maxProgress = p;
                            L(progressBarId).style = 'width: ' + p + '%;';
                            updateProgressBar(oldPrg);
                        }
                    }, 50);
                }
            }
        });
    }
</script>
</body>
</html>
